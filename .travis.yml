language: cpp
dist: jammy

matrix:
  include:
    - name: "linux gcc-11"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-11
            - parallel
      env:
        - MATRIX_EVAL="CC=gcc-11 && CXX=g++-11 && BUILD_TYPE=Release"

    - name: "linux gcc-12"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-12
            - parallel
      env:
        - MATRIX_EVAL="CC=gcc-12 && CXX=g++-12 && BUILD_TYPE=Release"

before_install:
  - eval "${MATRIX_EVAL}"
  - python3 -m pip install --upgrade pip
  - python3 -m pip install "pandas>=1.1.0"
  - python3 -m pip install "multitax>=1.3.1"
  - if [ "$BUILD_TYPE" == "Coverage" ]; then 
      python3 -m pip install coverage;
    fi

script:
  - mkdir build && cd build 
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DVERBOSE_CONFIG=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCONDA=OFF ..
  - cat compile_commands.json
  - cmake --build . -- -j2
  - ctest -VV .
  - sudo make install
  - ganon-build -h  # ret 0
  - ganon-classify -h  # ret 0
  - cd ..
  - if [ "$BUILD_TYPE" == "Coverage" ]; then 
      python3 -m coverage run --omit="/usr/*,tests/*" -m unittest discover -s tests/ganon/integration/ -v;
    else
      python3 -m unittest discover -s tests/ganon/integration/ -v &&
      python3 setup.py install --user &&
      ganon -h;
    fi

after_success:
  - if [ "$BUILD_TYPE" == "Coverage" ]; then 
      lcov --gcov-tool $(which ${GCOV}) -d . -c -o coverage_cpp.lcov &&
      python3 -m coverage xml -o coverage_py.xml &&
      curl -Os https://uploader.codecov.io/latest/linux/codecov &&
      chmod +x codecov &&
      ./codecov --nonZero -X search --file coverage_py.xml --file coverage_cpp.lcov;
    fi

notifications:
  email: false

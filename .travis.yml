language: cpp
dist: focal

matrix:
  include:
    - name: "linux gcc-8"
      os: linux
      addons:
        apt: { packages: [g++-8],
               sources:  [ubuntu-toolchain-r-test] }
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && BUILD_TYPE=Release"

    - name: "linux gcc-9"
      os: linux
      addons:
        apt: { packages: [g++-9],
               sources:  [ubuntu-toolchain-r-test] }
      env: MATRIX_EVAL="CC=gcc-9 && CXX=g++-9 && BUILD_TYPE=Release"

    - name: "linux gcc-10"
      os: linux
      addons:
        apt: { packages: [g++-10],
               sources:  [ubuntu-toolchain-r-test] }
      env: MATRIX_EVAL="CC=gcc-10 && CXX=g++-10 && BUILD_TYPE=Release"

    - name: "linux gcc-8 (coverage)"
      os: linux
      addons:
        apt: { packages: [g++-8, lcov],
               sources:  [ubuntu-toolchain-r-test] }
      env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8 && BUILD_TYPE=Coverage && GCOV=gcov-8"

before_install:
  - eval "${MATRIX_EVAL}"
  - python3 -m pip install --upgrade pip
  - python3 -m pip install "pandas>=1.1.0"
  - python3 -m pip install "multitax>=1.1.1"
  - if [ "$BUILD_TYPE" == "Coverage" ]; then 
      python3 -m pip install coverage;
    fi

script:
  - mkdir build && cd build 
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DVERBOSE_CONFIG=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCONDA=OFF ..
  - cat compile_commands.json
  - cmake --build . -- -j2
  - ctest -VV .
  - sudo make install
  - ganon-build -h  # ret 0
  - ganon-classify -h  # ret 0
  - cd ..
  - python3 -m unittest discover -s tests/ganon/integration/ -v
  - python3 setup.py install --user
  - ganon -h  # ret 0

after_success:
  - if [ "$BUILD_TYPE" == "Coverage" ]; then 
  
      coverage run -m unittest discover -s tests/ganon/integration/ -v;
      curl -Os https://uploader.codecov.io/latest/linux/codecov;
      chmod +x codecov;
      ./codecov;
    fi

notifications:
  email: false
